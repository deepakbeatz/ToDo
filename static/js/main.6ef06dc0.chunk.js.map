{"version":3,"sources":["Components/Navbar.js","Components/Header.js","Components/Footer.js","Components/Main.js","Containers/Home.js","Containers/Login.js","Containers/Register.js","App.js","serviceWorker.js","index.js"],"names":["navbar","class","Navbar","className","expand","Brand","href","aria-hidden","Toggle","aria-controls","Collapse","id","Nav","Link","Component","header","Radium","footer","style","position","width","backgroundColor","this","props","color","textAlign","height","paddingTop","bottom","dangerouslySetInnerHTML","text","main","state","axios","get","then","res","ctasks","itasks","temp","data","console","log","i","length","push","setState","catch","err","completeHandler","event","target","checked","name","value","Ctasks","Itasks","splice","indexOf","redoHandler","tasks","type","onChange","getItasks","onClick","document","getElementById","visibility","onSubmit","e","preventDefault","item","refs","post","bind","ref","getCtasks","home","Header","Main","Footer","login","register","app","path","exact","component","Login","Home","Register","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ef06dc0.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\nimport './navbar.css';\r\n\r\nclass navbar extends Component{\r\n    render(){\r\n\r\n        return(\r\n            <div class=\"main\">\r\n                <Navbar className=\"navColor\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/\"><i className=\"fa fa-hand-o-right\" aria-hidden=\"true\"></i>ToDo</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/home\"><i class=\"fa fa-tasks\"></i>MyTasks</Nav.Link>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Nav.Link href=\"/\"><i class=\"fas fa-sign-out-alt\"></i>Logout</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default navbar;","import React,{Component} from 'react';\r\nimport Radium from 'radium'\r\nimport Navbar from './Navbar'\r\n\r\nclass header extends Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                <Navbar />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Radium(header);","import React,{Component} from 'react';\r\nimport Radium from 'radium'\r\nimport './footer.css'\r\nclass footer extends Component{\r\n    \r\n\r\n\r\n    render(){\r\n        var style={\r\n            position:'absolute',\r\n            width:'100%',\r\n            backgroundColor:this.props.color,\r\n            textAlign:'center',\r\n            height:'40px',\r\n            paddingTop:'1%',\r\n            bottom:'0%'\r\n        }\r\n        return(\r\n            <div style={style} class=\"footer\">\r\n               <span dangerouslySetInnerHTML={{ \"__html\": \"&copy;\" }} />{this.props.text}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Radium(footer);","import React,{Component} from 'react';\r\nimport Radium from 'radium'\r\nimport axios from 'axios'\r\nimport './main.css'\r\n\r\nclass main extends Component{\r\n    state={\r\n        \"Itasks\":[],\r\n        \"Ctasks\":[],\r\n        \r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        axios.get(\"https://todo08.herokuapp.com/api/tasks\").then(res=>{\r\n            var ctasks=[]\r\n            var itasks=[]\r\n            var temp=res.data[\"tasks\"];\r\n            console.log(temp)\r\n            for(var i=0;i<temp.length;i++){\r\n                if(temp[i][\"taskStatus\"]===\"incomplete\"){\r\n                    itasks.push(temp[i][\"taskName\"])\r\n                    console.log(itasks)\r\n                }\r\n                if(temp[i][\"taskStatus\"]===\"complete\"){\r\n                    ctasks.push(temp[i][\"taskName\"])\r\n                    console.log(ctasks)\r\n                }\r\n                this.setState({\"Itasks\":itasks}) \r\n                this.setState({\"Ctasks\":ctasks}) \r\n            }\r\n            })\r\n            .catch(err=>{console.log(err)});\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        return(null);\r\n    }\r\n    render(){\r\n        const completeHandler=(event)=>{\r\n            let temp=[]\r\n            if(event.target.checked){\r\n                var name=event.target.value\r\n                temp=this.state.Ctasks;\r\n                temp.push(name);\r\n                this.setState({\"Ctasks\":temp})\r\n                var Itasks=this.state.Itasks; \r\n                Itasks.splice(Itasks.indexOf(name), 1);\r\n                this.setState({\"Itasks\":Itasks});\r\n            }\r\n            \r\n        }\r\n\r\n        const redoHandler=(name)=>{\r\n            var Ctasks=this.state.Ctasks;\r\n            Ctasks.splice(Ctasks.indexOf(name), 1);\r\n            this.setState({\"Ctasks\":Ctasks});\r\n            var Itasks=this.state.Itasks; \r\n            Itasks.push(name);\r\n            this.setState({\"Itasks\":Itasks});\r\n        }\r\n\r\n        const getItasks=()=>{\r\n            let tasks=[]\r\n            \r\n            let temp=this.state.Itasks;\r\n            for(var i=0;i<temp.length;i++){\r\n                tasks.push(<div>{temp[i]}<input type=\"checkbox\" value={temp[i]} onChange={completeHandler} checked={false}></input><br/></div>)\r\n                \r\n            }\r\n            return tasks\r\n            \r\n        }\r\n\r\n        \r\n        const getCtasks=()=>{\r\n            let tasks=[]\r\n            let temp=this.state.Ctasks;\r\n            for(var i=0;i<temp.length;i++){\r\n                tasks.push(<div>{temp[i]} <i value={temp[i]} onClick={redoHandler.bind(this,temp[i])} class=\"fas fa-redo\"></i><br /></div>)\r\n            }\r\n            return tasks\r\n        }\r\n        \r\n        const formHandler=(e)=>{\r\n            e.preventDefault();\r\n            document.getElementById('form').style.visibility=\"hidden\";\r\n            var item=this.refs.item.value\r\n            if(item!==null){\r\n                axios.post(\"https://todo08.herokuapp.com/api/tasks\",{\"userName\":\"test\",\"taskName\":item,\"taskStatus\":\"incomplete\"}).then(res=>{ \r\n                    var Itasks=this.state.Itasks; \r\n                    Itasks.push(item);\r\n                    console.log(res)\r\n                    this.setState({\"Itasks\":Itasks});\r\n                }).catch(err=>{console.log(err)})\r\n            }\r\n        }\r\n        \r\n        const addHandler=()=>{\r\n            document.getElementById('form').style.visibility=\"visible\";\r\n        }\r\n        \r\n        \r\n        return(\r\n            <div class=\"main\">\r\n                <div class=\"taskboard\">\r\n                    <h4>TODO</h4>\r\n                    {getItasks()}<br/>\r\n                    <div id=\"light\" onClick={addHandler}><i class=\"fas fa-plus\"></i> Add Task</div>\r\n                    <div id=\"form\">\r\n                        <form onSubmit={formHandler.bind(this)}><input name=\"item\" ref=\"item\" type=\"text\"/> <input type=\"submit\"value=\"Add Item\"/></form>\r\n                    </div>\r\n                    <hr/>\r\n                    <h4>COMPLETED</h4>\r\n                    <div class=\"completed\">\r\n                        {getCtasks()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Radium(main);","import React,{Component} from 'react';\r\nimport Header from '../Components/Header';\r\nimport Footer from '../Components/Footer';\r\nimport Main from '../Components/Main';\r\n\r\nclass home extends Component{\r\n  render(){\r\n    return(\r\n      <div class=\"App\">\r\n        <Header color=\"#7fd7e3\" text=\"ToDo\" />\r\n\r\n        <Main /><br/><br/>\r\n\r\n        <Footer color=\"#7fd7e3\" text= \"ToDo Ltd.\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default home;\r\n","import React,{Component} from 'react';\r\nimport Header from '../Components/Header';\r\nimport Footer from '../Components/Footer';\r\n\r\n\r\nclass login extends Component{\r\n  render(){\r\n      var style={\r\n          'position':'absolute',\r\n          'width':'100%',\r\n          'textAlign':'center'\r\n      }\r\n    return(\r\n      <div class=\"App\">\r\n        <Header color=\"#7fd7e3\" text=\"ToDo\" />\r\n        <span style={style}><i>Login Page</i></span>\r\n        <Footer color=\"#7fd7e3\" text= \"ToDo Ltd.\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default login;\r\n","import React,{Component} from 'react';\r\nimport Header from '../Components/Header';\r\nimport Footer from '../Components/Footer';\r\n\r\n\r\nclass register extends Component{\r\n  render(){\r\n    return(\r\n      <div class=\"App\">\r\n        <Header color=\"#7fd7e3\" text=\"ToDo\" />\r\n\r\n        <h1>Register Page</h1>\r\n\r\n        <Footer color=\"#7fd7e3\" text= \"ToDo Ltd.\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default register;\r\n","import React,{Component} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router,Route,Link} from 'react-router-dom';\nimport Home from './Containers/Home';\nimport Login from './Containers/Login';\nimport Register from './Containers/Register';\n\nclass app extends Component{\n  render(){\n    return(\n      <Router>\n        <div class=\"App\">\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/home\" exact component={Home} />\n          <Route path=\"/signup\" exact component={Register} />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default app;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}